import Head from "next/head";
import Image from "next/image";
import localFont from "next/font/local";
import styles from "@/styles/Home.module.css";
import React, { useEffect, useState } from "react";
import { HtmlContext } from "next/dist/server/route-modules/pages/vendored/contexts/entrypoints";
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

interface element{
  name : string
  value : boolean
}
export default function Home() {
  const [items, setItems] = useState<element[]>([]);
  const addVal = (val : string) =>{
    let item = items.find(i => i.name == val)
    if(typeof item === 'undefined'){
      setItems(items=>[...items, {name:val, value: false}])
      console.log(val)
    }
  }
  const update = (key: string, val:boolean)=> {

    const modified = items.map((item)=>{
      if(item.name != key){
        return item;
      }else{
        return {...item, value:val};
      }
    })
    setItems(modified)

  }
  useEffect(()=>{
 
      const listString = localStorage.getItem("list")
    
      if(listString != null){
        const list = JSON.parse(listString)
        setItems(list)
      }
  
   
   
  }, [])
  useEffect(()=>{
  
    localStorage.setItem("list", JSON.stringify(items));
  }
, [items])
  const deleteCompleted = ()=>{
    const modified = items.map((item)=>{
      if(!item.value){
        return item;
      }else{
      
      }
    })
    setItems(
      items.filter(item =>
        item.value == false
      )
    )
  }

  const deleteAll = () =>{
    setItems([])
  }
  
const [value, setValue] = useState("");

  return (
    
    <>

      <Head>
        <title>Lista de quehaceres</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className = "bodyClass">
          <div className="listCard">
            <h1>Lista de quehaceres</h1>
            <div className = "display">
              <input className= "textField" type="text" placeholder="Agregue una tarea" onChange={(evt:React.ChangeEvent<HTMLInputElement>)=>{setValue(evt.target.value)}}></input>
              
              <button className="button" onClick={()=>{addVal(value)}}>Crear</button>
              
            </div>
            {
                items?.map((item)=><div  key={item.name}>
                  <input type="checkbox" onChange ={(evt:React.ChangeEvent<HTMLInputElement>)=>{update(evt.target.id, evt.target.checked)}} id={item.name}  value={item.name} checked={item.value}/> 
                  <label htmlFor={item.name}>{item.name}</label>                
                </div>)
              }
              <div className="display">
                <button className="button2" onClick={deleteAll}>Eliminar Todos</button>
                <button className="button2" onClick={deleteCompleted}>Eliminar Completados</button>
              </div>
          </div>
          

      </div>
        
    </>
  );
}
